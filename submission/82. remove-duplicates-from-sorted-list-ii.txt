# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution(object):
    def deleteDuplicates(self, head):
        h = []
        while head!= None:
            h.append(head.val)
            head = head.next
        if len(h) == 0:return None
        if len(h) == 1:return ListNode(val=h[0])
        rec = [1 for i in range(len(h))]
        for i in range(len(h)-1):
            if h[i] == h[i+1]:
                rec[i] = 0
                rec[i+1] = 0
        h = [h[i] for i in range(len(h)) if rec[i]==1]
        if len(h) == 0:return None
        if len(h) == 1:return ListNode(val=h[0])
        res = ListNode(val=h[-1])
        for i in range(len(h)-2, -1, -1):res = ListNode(val=h[i], next=res)
        return res
        """
        :type head: ListNode
        :rtype: ListNode
        """
        