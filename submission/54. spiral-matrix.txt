class Solution(object):
    def spiralOrder(self, matrix0):
        if type(matrix0[0]) != list:return matrix0
        matrix = [[] for i in range(len(matrix0))]
        for i in range(len(matrix0)):matrix[i] = matrix0[i]
        m = len(matrix)
        if m == 1:return matrix[0]
        if m == 2:return matrix[0] + [matrix[1][i] for i in range(len(matrix[1])-1, 
            -1, -1)]
        n = len(matrix[0])
        if n == 1:return [matrix[i][0] for i in range(m)]
        if n == 2:return [matrix[0][0]] + [matrix[i][1] for i in range(m)] + 
            [matrix[i][0] for i in range(m-1, 0, -1)]
        ix = [0 for i in range(n)] + [i for i in range(1, m-1)] + [m-1 for i in range
            (n)] + [m-1-i for i in range(1, m-1)]
        iy = [i for i in range(n)] + [n-1 for i in range(1, m-1)] + [n-i-1 for i in 
            range(n)] + [0 for i in range(1, m-1)]
        return [matrix[ix[i]][iy[i]] for i in range(len(ix))] + self.spiralOrder
            ([matrix[i][1:n-1] for i in range(1, m-1)])