# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def kthSmallest(self, root, k):
        return self.kst(root, k)[1]
    def kst(self, root, k):
        if root == None:return [0, -1]
        #print("CCC", root.val)
        left = self.kst(root.left, k)
        #if root.left != None:print("LLL", root.val, root.left.val, left)
        if left[0] == k:return left
        if left[0] == k-1:return [k, root.val]
        right = self.kst(root.right, k-left[0]-1)
        #if root.right != None:print("RRR", root.val, root.right.val, right)
        return [left[0] + right[0] + 1, right[1]]