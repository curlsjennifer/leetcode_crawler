# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
# Definition for a binary tree node.
class TreeNode(object):
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution(object):
    def sortedListToBST(self, head):
        rec = []
        while head != None:
            rec.append(head.val)
            head = head.next
        return self.bt(rec)
    def bt(self, lst):
        if len(lst) == 0:return None      
        idx = len(lst)/2
        return TreeNode(val=lst[idx], left=self.bt(lst[:idx]), right=self.bt(lst[idx
            +1:]))
        