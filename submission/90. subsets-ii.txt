class Solution(object):
    def subsetsWithDup(self, nums):
        if len(nums) == 1:return [[], nums]
        setn = list(set(nums))
        dirs = {}
        for i in setn:dirs[i] = nums.count(i)
        res = [[setn[0] for i in range(j)] for j in range(dirs[setn[0]]+1)]
        if len(setn) == 1:return res
        for i in range(1, len(setn)):
            seed = setn[i]
            next1 = [[seed for i in range(j)] for j in range(1, dirs[seed]+1)]
            resn = []
            for it in next1:resn.extend([item + it for item in res])
            res.extend(resn)
            #print(res)
        return res
                    print(res)
        