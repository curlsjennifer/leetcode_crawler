class Solution(object):
    def twoSum(self, numbers, target):
        if len(numbers) == 2:return [1,2]
        if len(numbers) == 3:
            sn = sum(numbers)
            if target == sn - numbers[0]:return [2, 3]
            if target == sn - numbers[1]:return [1, 3]
            if target == sn - numbers[2]:return [1, 2]
        start, mid, end = 1, 0, len(numbers) - 1
        t2 = target - numbers[0]
        while end > start:
            if mid == int((start+end)/2):break
            mid = int((start+end)/2)
            if numbers[mid] == t2:
                return [1, mid+1]
            elif numbers[mid] > t2:
                end = mid
            else:
                start = mid
                idx1, idx2 = 0, start
        while idx1 < idx2:
            ii1, ii2 = idx1, idx2
            t2 = target - numbers[idx1]
            if numbers[idx2] == t2:
                return [idx1+1, idx2+1]
            elif numbers[idx2] < t2:
                #print("AAA")
                chk = 0
                for i in range(idx2, len(numbers)):
                    #print("qqq", i , numbers[i])
                    if numbers[i] == t2:
                        return [idx1+1, i+1]
                    if numbers[i] > t2:
                        idx1 += 1
                        idx2 = max(idx1 + 1, i-1)
                        #print("A", idx1, idx2) 
                        chk = 1
                        break;
                if chk == 0:
                    idx1 += 1
                    idx2 = len(numbers) -1
            else:
                #print("BBB")
                for i in range(idx2, idx1, -1):
                    if numbers[i] == t2:
                        return [idx1+1, i+1]
                    if numbers[i] < t2:
                        idx1 += 1
                        idx2 = max(idx1 + 1, i-1)  
                        #print("B", idx1, idx2) 
                        break;      
            #print(ii1, ii2, idx1, idx2)
            if (ii1 == idx1) & (ii2 == idx2):break;       
        