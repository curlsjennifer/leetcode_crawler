# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution(object):
    def lowestCommonAncestor(self, root, p, q):
        self.nodes = [p,q]
        self.root = root
        res = self.lca(root)[0]
        if len(self.nodes) > 0:return None
        return res
    def lca(self, root):
        if root == None:return []
        left = self.lca(root.left)
        right = self.lca(root.right)
        if root in self.nodes:
            self.nodes.remove(root)
            return [root]
                if len(left) == 1 and len(right) == 0:return left
        if len(left) == 0 and len(right) == 1:return right
        if len(left) == 1 and len(right) == 1:return [root]
        return []