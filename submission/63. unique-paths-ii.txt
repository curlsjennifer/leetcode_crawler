class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        #obstacleGrid = [[0 for i in range(10)] for j in range(7)]
        n = len(obstacleGrid)
        m = len(obstacleGrid[0])
        rec = [[0 for i in range(m)] for j in range(n)]
        rec[-1][-1] = 1
        if (obstacleGrid[0][0] == 1) | (obstacleGrid[-1][-1] == 1):return 0
        for I in range(m+n-3, -1, -1):
            for j in range(m):
                i = I - j
                if 0 <= i <= n-1:
                    rec[i][j] = 0 if i == n-1 else rec[i+1][j]
                    rec[i][j] = rec[i][j] if j == m-1 else rec[i][j] + rec[i][j+1]
                    if obstacleGrid[i][j] == 1:rec[i][j] = 0
        return rec[0][0]
                                        